#!/bin/bash

# Setup variables for binaries
PRINTF="/usr/bin/printf"
CLEAR="/usr/bin/clear"

# Variables to control menu state
QUIT=0
SUBMENU=0

# Error message for invalid selection
ERROR_SELECTION="You have made an invalid selection.\n\n"

# Called to display the different types of menu
function display_menu {
    DISPLAYED_MENU=$1
    $DISPLAYED_MENU
    return
}

# Main menu 
function main_menu {
    $PRINTF "######################################################################################\n"
    $PRINTF "#\n"
    $PRINTF "# Welcome to the system manager\n"
    $PRINTF "# -----------------------------\n"
    $PRINTF "#\n"
    $PRINTF "# Please select a menu item\n"
    $PRINTF "#\n"
    $PRINTF "# 1) basic menu options\n"
    $PRINTF "# 2) advanced menu options\n"
    $PRINTF "# 3) passwd file options\n"
    $PRINTF "# 4) quit\n"
    $PRINTF "#\n"
    $PRINTF "# Please enter a choice: "
    read -r CHOICE
    $PRINTF "######################################################################################\n\n"
    return
}

# Basic Menu
function basic_menu {
    $PRINTF "\n######################################################################################\n"
    $PRINTF "# Basic Tasks Menu\n"
    $PRINTF "# ----------------\n"
    $PRINTF "#\n"
    $PRINTF "# 1) Show free memory\n"
    $PRINTF "# 2) Show free disk space\n"
    $PRINTF "# 3) Show disk quota\n"
    $PRINTF "# 4) Show the groups I am a member of\n"
    $PRINTF "# 5) Show the history of the commands for bash\n"
    $PRINTF "# 6) Quit this menu\n#\n"
    $PRINTF "# Please enter an option: "
    read -r CHOICE
    $PRINTF "######################################################################################\n\n"
    return
}

# Advanced Menu
function advanced_menu {
    $PRINTF "\n######################################################################################\n"
    $PRINTF "# Advanced Tasks Menu\n"
    $PRINTF "#\n"
    $PRINTF "# 1) Print the number of CPUs available on the system\n"
    $PRINTF "# 2) Print the meximum number of open files allowed per user\n"
    $PRINTF "# 3) Backup all files that match a criterion\n"
    $PRINTF "# 4) Quit this menu\n#\n"
    $PRINTF "# Please enter your choice: "
    read -r CHOICE
    $PRINTF "######################################################################################\n\n"
    return
}

# Passwd Menu
function passwd_menu {
    $PRINTF "\n######################################################################################\n"
    $PRINTF "# Passwd Tasks Menu\n"
    $PRINTF "#\n"
    $PRINTF "# 1) Print the userid of a specified user\n"
    $PRINTF "# 2) Print the groupid of a specified user\n"
    $PRINTF "# 3) Print the comment field for a specified user\n"
    $PRINTF "# 4) Print the home directory of a specified user\n"
    $PRINTF "# 5) Print the default shell of a specified user\n"
    $PRINTF "# 6) Exit this menu\n#\n"
    $PRINTF "# Please enter your selection: "
    read -r CHOICE
    $PRINTF "######################################################################################\n\n"
    return
}

# Clear the screen before starting the script
$CLEAR

# Logic to supply the correct function with the menu selection.
while [[ "$QUIT" -eq "0" ]]; do
    display_menu main_menu
    SUBMENU=0
    
    case $CHOICE in 
        1)
            while [[ "$SUBMENU" -eq "0" ]]; do
                display_menu basic_menu
                case $CHOICE in
                1)
                    ./basic freemem
                ;;
                2)
                    ./basic diskfree
                ;;
                3)
                    ./basic quota
                ;;
                4)
                    ./basic groups
                ;;
                5)
                    ./basic 'history'
                ;;
                6)
                    SUBMENU=1
                ;;
                *) 
                    "$PRINTF" "$ERROR_SELECTION"
                ;;
                esac
            done
        ;;
        2)
            while [[ "$SUBMENU" -eq "0" ]]; do
                display_menu advanced_menu

                if [[ "$CHOICE" -eq "3" ]]; then
                    $PRINTF "Please enter the criteria to search: "
                    read -r CRITERIA
                    $PRINTF "Enter the directory to store the backup: "
                    read -r BACKUP
                fi

                case $CHOICE in
                1)
                    ./advanced -p
                ;;
                2)
                    ./advanced -o
                ;;
                3)
                    ./advanced -b "$CRITERIA" "$BACKUP"
                ;;
                4)
                    SUBMENU=1
                ;;
                *)
                    "$PRINTF" "$ERROR_SELECTION"
                ;;
                esac
            done
        ;;
        3)
            while [[ "$SUBMENU" -eq "0" ]]; do
                display_menu passwd_menu
                
                if [[ "$CHOICE" -gt "0" ]] && [[ "$CHOICE" -lt "6" ]]; then
                    $PRINTF "Enter the specified user: "
                    read -r USER
                fi

                case $CHOICE in
                1)
                    ./userman userid "$USER"
                ;;
                2)
                    ./userman groupid "$USER"
                ;;
                3)
                    ./userman comment "$USER"
                ;;
                4)
                    ./userman home "$USER"
                ;;
                5)
                    ./userman shell "$USER"
                ;;
                6)
                    SUBMENU=1
                ;;
                *)
                    "$PRINTF" "$ERROR_SELECTION"
                ;;
                esac
            done
        ;;
        4)
            QUIT=1
        ;;
        *)
            "$PRINTF" "$ERROR_SELECTION"
        ;;
    esac
done
exit 0
