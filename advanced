#!/bin/bash

#Setup binaries
FIND=/usr/bin/find

while getopts ":pob:" opt; do
    case $opt in
        p)
            #Find processor from cpuinfo and count how many there are
            PROCESSORS=$(grep processor /proc/cpuinfo -c)
            echo "There are $PROCESSORS cpu's available on this system"
        ;;
        o)
            echo "There is a limit of $(ulimit -u) processes available to a single user"    
        ;;
        b)
            #Setup variables
            WILDCARD="$2"
            DESTINATION=$3
            
            #Setup searches
            FINDFILES=$("$FIND" -maxdepth 1 -name "$WILDCARD" 2>/dev/null)
            COPIEDFILES=$(wc -w <<< "$FINDFILES")

            #Check if there are results for the entered wildcard
            if [[ -z "$FINDFILES" ]]; then
                echo "There are no results that match: $WILDCARD"
                exit -1
            fi
            
            #Check that the desination has been passed through to the command
            if [[ -z "$DESTINATION" ]]; then
                echo "You must enter in a folder destination for files to be stored"
                exit -2
            fi
            
            #Check for the right amount of arguments
            if [[ "$#" -gt 3 ]]; then
                echo "There are too many arguments passed through"
                exit -3
            fi
            
            #If the file cannot be found then it's safe to create a directory
            if [[ -z $("$FIND" -name "$DESTINATION") ]]; then
               mkdir "$DESTINATION"
               $FIND -maxdepth 1 -name "$WILDCARD" -type f | xargs cp -t "$DESTINATION"
               echo "The '${DESTINATION}' directory has been created with $COPIEDFILES files copied"
            #If a file is found and it's a directory and not a file then execute the copy
            elif [[ -d "$DESTINATION" ]]; then
                $FIND -maxdepth 1 -name "$WILDCARD" -type f | xargs cp -t "$DESTINATION"
                echo "The '${DESTINATION}' directory already exists. $COPIEDFILES files have been copied"
                else
                    #A file exists but is not a directory. The files cannot be copied into this
                    echo "A file with that name already exists and cannot be written to"
                    exit -4
            fi
        ;;
        #If there is an unknown operator then throw an error
        \?)
            echo "Unknown option: -$OPTARG"
        ;;
        #The -b operator requires an argument
        :)
            echo "Option -$OPTARG requires an argument."
        ;;
    esac
done
exit 0
